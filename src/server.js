// the express async errors library need to be required on top of everything
require('dotenv/config');
require("express-async-errors")

const migrationsRun = require("./database/sqlite/migrations")

const AppError = require("./utils/AppError");
const uploadConfig = require("./configs/upload");

const cors = require("cors");
const express = require('express');
const routes = require("./routes")

migrationsRun();

const app = express();
app.use(cors());
app.use(express.json())

app.use('/files', express.static(uploadConfig.UPLOADS_FOLDER))

app.use(routes)

app.use( (error, request, response, next) => {
    // if the error has the same instance of AppError is because it was an error generated by the client
    if(error instanceof AppError) {
        return response.status(error.statusCode).json( {
            status: "error",
            message: error.message
        });
    }
    
    console.error(error)

    // if the error isnt an error generated by the client, there will be generated a default error
    return response.status(500).json( {
        status: "error",
        message: "Internal server errror"
    })
});

const PORT = process.env.PORT || 3333;
app.listen(PORT, () => console.log(`Server is running on PORT ${PORT}`));